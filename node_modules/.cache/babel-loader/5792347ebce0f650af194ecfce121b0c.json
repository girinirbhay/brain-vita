{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\brain-vita\\\\src\\\\components\\\\Game\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './style.css';\nimport Box from '../Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst board = [['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', ''], ['0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0'], ['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', '']];\n\nfunction Game() {\n  _s();\n\n  const [boardState, setBoardState] = useState(board);\n\n  const onStartDrag = (rowIndex, cIndex) => {\n    board.map();\n  };\n\n  const onduringDrag = (rowIndex, cIndex) => {};\n\n  const onStopDrag = (rowIndex, cIndex) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game\",\n    children: boardState.map(function (row, rowIndex) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map(function (cell, cellIndex) {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            onStart: () => onStartDrag(rowIndex, cellIndex),\n            onDrag: () => onDuringDrag(rowIndex, cellIndex),\n            onStop: () => onStopDrag(rowIndex, cellIndex),\n            row: rowIndex,\n            col: cellIndex,\n            currentVal: cell\n          }, `${rowIndex}${cellIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Game, \"c5K7h9uC520SgkotnaSD0vkGhnw=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/React/brain-vita/src/components/Game/index.js"],"names":["React","useState","Box","board","Game","boardState","setBoardState","onStartDrag","rowIndex","cIndex","map","onduringDrag","onStopDrag","row","cell","cellIndex","onDuringDrag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,EAAnB,EAAsB,EAAtB,CAAD,EAA2B,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,EAAnB,EAAsB,EAAtB,CAA3B,EAAqD,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAArD,EAAmF,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,EAAb,EAAgB,GAAhB,EAAoB,GAApB,EAAwB,GAAxB,CAAnF,EAAgH,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAhH,EAA8I,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,EAAnB,EAAsB,EAAtB,CAA9I,EAAwK,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,EAAnB,EAAsB,EAAtB,CAAxK,CAAd;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACE,KAAD,CAA5C;;AACA,QAAMI,WAAW,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAoB;AACpCN,IAAAA,KAAK,CAACO,GAAN;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,CAACH,QAAD,EAAWC,MAAX,KAAoB,CAExC,CAFD;;AAGA,QAAMG,UAAU,GAAG,CAACJ,QAAD,EAAWC,MAAX,KAAoB,CAEtC,CAFD;;AAIA,sBAAO;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,cACJJ,UAAU,CAACK,GAAX,CAAe,UAAUG,GAAV,EAAeL,QAAf,EAAwB;AACrC,0BAAO;AAAoB,QAAA,SAAS,EAAC,KAA9B;AAAA,kBACPK,GAAG,CAACH,GAAJ,CAAQ,UAAUI,IAAV,EAAgBC,SAAhB,EAA2B;AACjC,8BAAO,QAAC,GAAD;AACN,YAAA,OAAO,EAAE,MAAIR,WAAW,CAACC,QAAD,EAAUO,SAAV,CADlB;AAEN,YAAA,MAAM,EAAE,MAAIC,YAAY,CAACR,QAAD,EAAUO,SAAV,CAFlB;AAGN,YAAA,MAAM,EAAE,MAAIH,UAAU,CAACJ,QAAD,EAAUO,SAAV,CAHhB;AAIV,YAAA,GAAG,EAAEP,QAJK;AAIK,YAAA,GAAG,EAAEO,SAJV;AAIqB,YAAA,UAAU,EAAED;AAJjC,aAAW,GAAEN,QAAS,GAAEO,SAAU,EAAlC;AAAA;AAAA;AAAA;AAAA,kBAAP;AAKF,SANA;AADO,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AASJ,KAVE;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GA1BQJ,I;;KAAAA,I;AA4BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport './style.css'\r\nimport Box from '../Box'\r\n\r\nconst board = [['','','0','0','0','',''],['','','0','0','0','',''],['0','0','0','0','0','0','0'],['0','0','0','','0','0','0'],['0','0','0','0','0','0','0'],['','','0','0','0','',''],['','','0','0','0','','']]\r\n\r\nfunction Game(){\r\n\r\n    const [boardState, setBoardState] = useState(board)\r\n    const onStartDrag = (rowIndex, cIndex)=>{\r\n        board.map()\r\n    }\r\n    const onduringDrag = (rowIndex, cIndex)=>{\r\n        \r\n    }\r\n    const onStopDrag = (rowIndex, cIndex)=>{\r\n        \r\n    }\r\n\r\n    return <div id=\"game\">\r\n      {boardState.map(function (row, rowIndex){\r\n         return <div key={rowIndex} className=\"row\">\r\n        {row.map(function (cell, cellIndex) {\r\n           return <Box key={`${rowIndex}${cellIndex}`} \r\n            onStart={()=>onStartDrag(rowIndex,cellIndex)} \r\n            onDrag={()=>onDuringDrag(rowIndex,cellIndex)} \r\n            onStop={()=>onStopDrag(rowIndex,cellIndex)} \r\n        row={rowIndex} col={cellIndex} currentVal={cell}/>\r\n        })}\r\n        </div>\r\n    } )}\r\n    </div>\r\n}\r\n\r\nexport default Game"]},"metadata":{},"sourceType":"module"}