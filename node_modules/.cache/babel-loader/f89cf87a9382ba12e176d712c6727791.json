{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\brain-vita\\\\src\\\\components\\\\Game\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './style.css';\nimport Box from '../Box';\nimport { hasUnreliableEmptyValue } from \"@testing-library/user-event/dist/utils\";\nimport { keyboard } from \"@testing-library/user-event/dist/keyboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst board = [['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', ''], ['0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0'], ['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', '']];\n\nfunction Game() {\n  _s();\n\n  const [boardState, setBoardState] = useState(board);\n  const [dragPosition, setDragPosition] = useState({});\n  const [stopPosition, setstopPosition] = useState({});\n\n  function onStartDrag(rIndex, cIndex) {\n    console.log('drag');\n    setDragPosition({\n      r: rIndex,\n      c: cIndex\n    });\n  }\n\n  function allowDrop(e) {\n    e.preventDefault();\n  }\n\n  function onStopDrag(rIndex, cIndex) {\n    const newBoardState = [...boardState];\n    console.log('drop');\n    newBoardState[dragPosition.r][dragPosition.c] = '';\n    newBoardState[rIndex][cIndex] = 0;\n    setBoardState(newBoardState); //console.log(newBoardState);\n  }\n\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game\",\n    children: boardState.map(function (row, rowIndex) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map(function (cell, cellIndex) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragOver: allowDrop,\n            onDrop: () => onStopDrag(rowIndex, cellIndex),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              onStart: () => onStartDrag(rowIndex, cellIndex),\n              row: rowIndex,\n              col: cellIndex,\n              currentVal: cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, `${rowIndex}${cellIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Game, \"qvNEmSSUUjLpLR/bOT/feMlUDxY=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/React/brain-vita/src/components/Game/index.js"],"names":["React","useState","Box","hasUnreliableEmptyValue","keyboard","board","Game","boardState","setBoardState","dragPosition","setDragPosition","stopPosition","setstopPosition","onStartDrag","rIndex","cIndex","console","log","r","c","allowDrop","e","preventDefault","onStopDrag","newBoardState","map","row","rowIndex","cell","cellIndex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport './style.css'\r\nimport Box from '../Box'\r\nimport { hasUnreliableEmptyValue } from \"@testing-library/user-event/dist/utils\";\r\nimport { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\n\r\nconst board = [['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', ''], ['0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0'], ['', '', '0', '0', '0', '', ''], ['', '', '0', '0', '0', '', '']]\r\n\r\nfunction Game() {\r\n\r\n    const [boardState, setBoardState] = useState(board)\r\n    const [dragPosition, setDragPosition] = useState({})\r\n    const [stopPosition, setstopPosition] = useState({})\r\n\r\n    function onStartDrag(rIndex, cIndex) {\r\n        console.log('drag')\r\n        setDragPosition({ r: rIndex, c: cIndex })\r\n\r\n    }\r\n    function allowDrop(e){\r\n        \r\n        e.preventDefault()\r\n    }\r\n\r\n    function onStopDrag(rIndex, cIndex) {\r\n        const newBoardState = [...boardState]\r\n        console.log('drop')\r\n\r\n        newBoardState[dragPosition.r][dragPosition.c] = ''\r\n        newBoardState[rIndex][cIndex] = 0\r\n        setBoardState(newBoardState);\r\n\r\n\r\n\r\n        //console.log(newBoardState);\r\n    }\r\n    console.log('render')\r\n    return <div id=\"game\">\r\n        {boardState.map(function (row, rowIndex) {\r\n            return <div key={rowIndex} className=\"row\">\r\n                {row.map(function (cell, cellIndex) {\r\n                    return <div key={`${rowIndex}${cellIndex}`} onDragOver={allowDrop}  onDrop={() => onStopDrag(rowIndex, cellIndex)}>\r\n                    <Box \r\n                        onStart={() => onStartDrag(rowIndex, cellIndex)}\r\n                        \r\n\r\n                        row={rowIndex} col={cellIndex} currentVal={cell} />\r\n                    </div>\r\n                })}\r\n            </div>\r\n        })}\r\n    </div >\r\n}\r\n\r\nexport default Game"]},"metadata":{},"sourceType":"module"}